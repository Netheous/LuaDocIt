[{"name":"coffeeInventory.open","param":{"realm":"Client","desc":"Open inventory"}},{"name":"coffeeInventory.removeInvalidItems","param":{}},{"name":"coffeeInventory.readPlayerData","param":{}},{"name":"PANEL:Init","param":{}},{"name":"PANEL:Paint","param":{}},{"name":"PANEL:setTitle","param":{}},{"name":"PANEL:addCloseButton","param":{}},{"name":"PANEL:Init","param":{}},{"name":"PANEL:OnCursorEntered","param":{}},{"name":"PANEL:OnCursorExited","param":{}},{"name":"PANEL:setText","param":{}},{"name":"PANEL:setColor","param":{}},{"name":"PANEL:Paint","param":{}},{"name":"PANEL:Init","param":{}},{"name":"PANEL:Paint","param":{}},{"name":"PANEL:Init","param":{}},{"name":"PANEL:update","param":{}},{"name":"coffeeInventory.config.addItem","param":{"realm":"Shared","args":"item Table","desc":"Register new item"}},{"name":"coffeeInventory.database.init","param":{}},{"name":"coffeeInventory.database.addPlayerData","param":{}},{"name":"coffeeInventory.database.fetchPlayerData","param":{}},{"name":"coffeeInventory.database.savePlayerData","param":{}},{"name":"coffeeInventory.database.drop","param":{"note":"This will wipe out entire database and requires a map change/restart immediately - if you want to use it as server owner, run \u0027coffee_inventory_dropdatabase\u0027 console command instead!","realm":"Server","args":"ply Player, cmd String, args Table","desc":"Completely wipe out CoffeeInventory database"}},{"name":"coffeeInventory.addItem","param":{"note":"Data should contain variables stored on entity that don\u0027t self-reproduce upon Initialize, such as moneyprinter.storedmoney","realm":"Server","args":"ply Player, class String, model String, amount Integer, data Table","desc":"Add item to players inventory"}},{"name":"coffeeInventory.removeItem","param":{"realm":"Server","args":"ply Player, itemPos Table, amount Integer","desc":"Remove item from players inventory"}},{"name":"coffeeInventory.storeItem","param":{"realm":"Server","args":"ply Player, ent Entity","desc":"Store entity as an item"}},{"name":"coffeeInventory.removeInvalidItems","param":{}},{"name":"coffeeInventory.dropStack","param":{"realm":"Server","args":"ply Player, itemPos Table","desc":"Drop entire stack of items"}},{"name":"coffeeInventory.hasMatchingData","param":{}},{"name":"coffeeInventory.dropItem","param":{"realm":"Server","args":"ply Player, itemPos Table","desc":"Drop single item from a stack"}},{"name":"coffeeInventory.useItem","param":{"realm":"Server","args":"ply Player, itemPos Table","desc":"Use item at certain position"}},{"name":"coffeeInventory.moveItem","param":{"realm":"Server","args":"ply Player, fromPos Table, toPos Table","desc":"Move single item from to another place"}},{"name":"coffeeInventory.moveStack","param":{"realm":"Server","args":"ply Player, fromPos Table, toPos Table","desc":"Move entire stack from to another place"}},{"name":"coffeeInventory.open","param":{}},{"name":"coffeeInventory.isItem","param":{"realm":"Server","args":"ent Entity","desc":"Tells you whether item is storable or not"}},{"name":"coffeeInventory.hasItem","param":{"realm":"Server","args":"ply Player, itemClass String","desc":"Returns if player has item of specific class"}},{"name":"coffeeInventory.getInventory","param":{}},{"name":"coffeeInventory.getItemEntry","param":{}},{"name":"coffeeInventory.getFreeSlots","param":{}},{"name":"coffeeInventory.getFreeSlot","param":{}},{"name":"coffeeInventory.getItemCount","param":{}},{"name":"coffeeInventory.initPlayerData","param":{}},{"name":"coffeeInventory.sendPlayerData","param":{}},{"name":"person:addItem","param":{}},{"name":"person:removeItem","param":{}},{"name":"person:storeItem","param":{}},{"name":"person:dropStack","param":{}},{"name":"person:dropItem","param":{}},{"name":"person:useItem","param":{}},{"name":"person:moveItem","param":{}},{"name":"person:moveStack","param":{}},{"name":"person:openInventory","param":{}},{"name":"person:getFreeSlots","param":{}},{"name":"person:getFreeSlot","param":{}},{"name":"person:getInventory","param":{"realm":"Server","desc":"Return player\u0027s inventory"}},{"name":"ENT:Draw","param":{}},{"name":"ENT:Initialize","param":{}},{"name":"ENT:Use","param":{}},{"name":"ENT:sendData","param":{}}]